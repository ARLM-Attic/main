<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:commands="clr-namespace:SmartPrinter.UI.Commands"
                    mc:Ignorable="d">

    <Color x:Key="SMARTdocColor">#004475</Color>

    <Color x:Key="OverlayColor">#105485</Color>

    <Color x:Key="PressColor">#206495</Color>

    <SolidColorBrush x:Key="SMARTdocBrush"
                     Color="{DynamicResource SMARTdocColor}" />

    <SolidColorBrush x:Key="OverlayBrush"
                     Color="{DynamicResource OverlayColor}" />

    <SolidColorBrush x:Key="PressBrush"
                     Color="{DynamicResource PressColor}" />

    <Style x:Key="BaseStyle"
           TargetType="{x:Type FrameworkElement}">
        <Setter Property="VerticalAlignment"
                Value="Center" />
    </Style>

    <Style TargetType="TextBlock"
           BasedOn="{StaticResource BaseStyle}">
        <Setter Property="FontSize"
                Value="15" />
    </Style>

    <Style TargetType="CheckBox"
           BasedOn="{StaticResource BaseStyle}" />

    <Style TargetType="RadioButton"
           BasedOn="{StaticResource BaseStyle}" />

    <Style TargetType="TextBox"
           BasedOn="{StaticResource BaseStyle}">
        <Setter Property="FontSize"
                Value="15" />
    </Style>

    <Style x:Key="WindowStyle"
           TargetType="{x:Type Window}">
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="WindowStyle"
                Value="None" />
        <Setter Property="ResizeMode"
                Value="NoResize" />
    </Style>

    <Style x:Key="ButtonStyle"
           TargetType="{x:Type Button}">
        <Setter Property="Margin"
                Value="5" />
    </Style>

    <Style x:Key="HideMainWindowButtonStyle"
           TargetType="{x:Type Button}">
        <Setter Property="Foreground"
                Value="Gray" />
        <Setter Property="HorizontalAlignment"
                Value="Right" />
        <Setter Property="VerticalAlignment"
                Value="Top" />
        <Setter Property="Height"
                Value="32" />
        <Setter Property="Width"
                Value="32" />
        <Setter Property="Command">
            <Setter.Value>
                <commands:HideWindowCommand />
            </Setter.Value>
        </Setter>
        <Setter Property="CommandParameter"
                Value="{Binding RelativeSource={RelativeSource FindAncestor,  AncestorType={x:Type Window}}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <ContentPresenter HorizontalAlignment="Center"
                                          TextBlock.Foreground="{TemplateBinding Foreground}"
                                          TextBlock.FontWeight="ExtraBold"
                                          VerticalAlignment="Center" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Geometry x:Key="FullScreenGeometry">M 423.709,509.023L 451.855,509.023L 451.855,489.939L 423.709,489.939M 422.188,486.052L 453.379,486.052L 453.379,510.488L 422.188,510.488L 422.188,486.052 Z</Geometry>

    <Geometry x:Key="XGeometry">M 994.458,224.746L 985.992,216.282L 977.568,224.704L 974.028,221.162L 982.45,212.739L 974.028,204.315L 977.61,200.731L 986.034,209.155L 994.458,200.731L 998.001,204.272L 989.578,212.695L 998.042,221.162L 994.458,224.746 Z</Geometry>

    <Style x:Key="CloseWindowButtonStyle"
           TargetType="{x:Type Button}">
        <Setter Property="Foreground"
                Value="White" />
        <Setter Property="HorizontalAlignment"
                Value="Right" />
        <Setter Property="VerticalAlignment"
                Value="Top" />
        <Setter Property="Height"
                Value="20" />
        <Setter Property="Width"
                Value="20" />
        <Setter Property="Command">
            <Setter.Value>
                <commands:CloseWindowCommand />
            </Setter.Value>
        </Setter>
        <Setter Property="CommandParameter"
                Value="{Binding RelativeSource={RelativeSource FindAncestor,  AncestorType={x:Type Window}}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <ContentPresenter HorizontalAlignment="Center"
                                          TextBlock.Foreground="{TemplateBinding Foreground}"
                                          TextBlock.FontWeight="ExtraBold"
                                          VerticalAlignment="Center" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="PrinterButtonStyle"
           TargetType="{x:Type Button}">

        <Setter Property="Background"
                Value="{DynamicResource SMARTdocBrush}" />
        <Setter Property="Foreground"
                Value="White" />
        <Setter Property="HorizontalContentAlignment"
                Value="Left" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                            Margin="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True">
                        <ContentPresenter x:Name="contentPresenter"
                                          Margin="10,0,0,0"
                                          TextElement.FontSize="15"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Content="{TemplateBinding Content}"
                                          ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                          Focusable="False"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted"
                                 Value="True">
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="{DynamicResource OverlayBrush}" />

                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="{DynamicResource PressBrush}" />

                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked"
                                 Value="True">
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="{DynamicResource PressBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="{DynamicResource SMARTdocBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ItemStyle"
           TargetType="{x:Type ListBoxItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Grid HorizontalAlignment="Stretch">
                        <ContentPresenter />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SimpleButton"
           TargetType="{x:Type Button}">
        <Setter Property="Background"
                Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="Root"
                          Background="Transparent"
                          RenderTransformOrigin="0.5,0.5">
                        <Grid.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform />
                                <SkewTransform />
                                <RotateTransform />
                                <TranslateTransform />
                            </TransformGroup>
                        </Grid.RenderTransform>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         Storyboard.TargetName="grid"
                                                         Duration="0"
                                                         To="0.5" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         Storyboard.TargetName="grid"
                                                         Duration="0"
                                                         To="1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)"
                                                                       Storyboard.TargetName="Root">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0.9" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)"
                                                                       Storyboard.TargetName="Root">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0.9" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates" />
                            <VisualStateGroup x:Name="ValidationStates" />
                        </VisualStateManager.VisualStateGroups>

                        <Grid x:Name="grid"
                              Opacity="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="3*" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="3*" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Path Margin="{TemplateBinding Padding}"
                                  Grid.Column="1"
                                  Grid.Row="1"
                                  Fill="White"
                                  Stretch="Uniform"
                                  Data="{TemplateBinding Content}" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter TargetName="Root"
                                    Property="Opacity"
                                    Value="0.45" />
                        </Trigger>

                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter TargetName="Root"
                                    Property="Opacity"
                                    Value="0.3" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>