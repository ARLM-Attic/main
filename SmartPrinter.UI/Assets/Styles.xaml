<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:commands="clr-namespace:SmartPrinter.UI.Commands"
                    mc:Ignorable="d">

    <Color x:Key="SMARTdocColor">#004475</Color>

    <Color x:Key="OverlayColor">#105485</Color>

    <Color x:Key="PressColor">#206495</Color>

    <SolidColorBrush x:Key="SMARTdocBrush"
                     Color="{DynamicResource SMARTdocColor}" />

    <SolidColorBrush x:Key="OverlayBrush"
                     Color="{DynamicResource OverlayColor}" />

    <SolidColorBrush x:Key="PressBrush"
                     Color="{DynamicResource PressColor}" />

    <Style x:Key="BaseStyle"
           TargetType="{x:Type FrameworkElement}">
        <Setter Property="VerticalAlignment"
                Value="Center" />
    </Style>

    <Style TargetType="TextBlock"
           BasedOn="{StaticResource BaseStyle}" />
    <Style TargetType="CheckBox"
           BasedOn="{StaticResource BaseStyle}" />
    <Style TargetType="RadioButton"
           BasedOn="{StaticResource BaseStyle}" />
    <Style TargetType="TextBox"
           BasedOn="{StaticResource BaseStyle}" />

    <Style x:Key="WindowStyle"
           TargetType="{x:Type Window}">
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="WindowStyle"
                Value="None" />
        <Setter Property="ResizeMode"
                Value="NoResize" />
    </Style>

    <Style x:Key="ButtonStyle"
           TargetType="{x:Type Button}">
        <Setter Property="Margin"
                Value="5" />
    </Style>

    <Style x:Key="HideMainWindowButtonStyle"
           TargetType="{x:Type Button}">
        <Setter Property="Foreground"
                Value="Gray" />
        <Setter Property="HorizontalAlignment"
                Value="Right" />
        <Setter Property="VerticalAlignment"
                Value="Top" />
        <Setter Property="Height"
                Value="32" />
        <Setter Property="Width"
                Value="32" />
        <Setter Property="Command">
            <Setter.Value>
                <commands:HideWindowCommand />
            </Setter.Value>
        </Setter>
        <Setter Property="CommandParameter"
                Value="{Binding RelativeSource={RelativeSource FindAncestor,  AncestorType={x:Type Window}}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <ContentPresenter HorizontalAlignment="Center"
                                          TextBlock.Foreground="{TemplateBinding Foreground}"
                                          TextBlock.FontWeight="ExtraBold"
                                          VerticalAlignment="Center" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CloseWindowButtonStyle"
           TargetType="{x:Type Button}">
        <Setter Property="Foreground"
                Value="Gray" />
        <Setter Property="HorizontalAlignment"
                Value="Right" />
        <Setter Property="VerticalAlignment"
                Value="Top" />
        <Setter Property="Height"
                Value="20" />
        <Setter Property="Width"
                Value="20" />
        <Setter Property="Command">
            <Setter.Value>
                <commands:CloseWindowCommand />
            </Setter.Value>
        </Setter>
        <Setter Property="CommandParameter"
                Value="{Binding RelativeSource={RelativeSource FindAncestor,  AncestorType={x:Type Window}}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <ContentPresenter HorizontalAlignment="Center"
                                          TextBlock.Foreground="{TemplateBinding Foreground}"
                                          TextBlock.FontWeight="ExtraBold"
                                          VerticalAlignment="Center" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="PrinterButtonStyle"
           TargetType="{x:Type Button}">

        <Setter Property="Background"
                Value="{DynamicResource SMARTdocBrush}" />
        <Setter Property="Foreground"
                Value="White" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                            Margin="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True">
                        <ContentPresenter x:Name="contentPresenter"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Content="{TemplateBinding Content}"
                                          ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                          Focusable="False"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted"
                                 Value="True">
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="{DynamicResource OverlayBrush}" />

                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="{DynamicResource PressBrush}" />

                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked"
                                 Value="True">
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="{DynamicResource PressBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="{DynamicResource SMARTdocBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>